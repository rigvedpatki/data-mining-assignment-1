"use strict";
const fs = require('fs');
const path = require('path');
const ADLER32 = require('adler-32');
const DATA_PATH = path.resolve(__dirname, '../data');
const dataFiles = fs.readdirSync(DATA_PATH);
const documents = [];
const k = 10;
console.time('data-mining-assignment-1');
for (file of dataFiles.filter(file => file.endsWith('.txt'))) {
    let document = {};
    document.path = path.resolve(__dirname, '../data/', file);
    document.content = fs.readFileSync(document.path, 'utf-8');
    document.shingles = [];
    for (let i = 0; i < document.content.length - k; i++) {
        document.shingles.push(document.content.substr(i, k));
    }
    document.setShingles = Array.from(new Set(document.shingles));
    documents.push(document);
}
for (doc of documents) {
    let hashedShingles = [];
    for (shingle of doc.setShingles) {
        hashedShingles.push(ADLER32.str(shingle));
    }
    doc.hashedShingles = hashedShingles;
}
// fs.writeFileSync('output.txt', JSON.stringify(documents[0], null, 2));
for (doc of documents) {
    console.log(`Name : ${doc.path} \nLength of shingles : ${doc.shingles.length} \nLength of set shingles : ${doc.setShingles.length} \nLength of hashed shingles : ${doc.hashedShingles.length}`);
}
console.timeEnd('data-mining-assignment-1');
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXgtdGVtcC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9pbmRleC10ZW1wLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxNQUFNLEVBQUUsR0FBRyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUM7QUFDekIsTUFBTSxJQUFJLEdBQUcsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0FBQzdCLE1BQU0sT0FBTyxHQUFHLE9BQU8sQ0FBQyxVQUFVLENBQUMsQ0FBQztBQUVwQyxNQUFNLFNBQVMsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLFNBQVMsRUFBRSxTQUFTLENBQUMsQ0FBQztBQUVyRCxNQUFNLFNBQVMsR0FBRyxFQUFFLENBQUMsV0FBVyxDQUFDLFNBQVMsQ0FBQyxDQUFDO0FBRTVDLE1BQU0sU0FBUyxHQUFHLEVBQUUsQ0FBQztBQUNyQixNQUFNLENBQUMsR0FBRyxFQUFFLENBQUM7QUFFYixPQUFPLENBQUMsSUFBSSxDQUFDLDBCQUEwQixDQUFDLENBQUM7QUFDekMsS0FBSyxJQUFJLElBQUksU0FBUyxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLENBQUMsRUFBRTtJQUM1RCxJQUFJLFFBQVEsR0FBRyxFQUFFLENBQUM7SUFDbEIsUUFBUSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLFNBQVMsRUFBRSxVQUFVLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFDMUQsUUFBUSxDQUFDLE9BQU8sR0FBRyxFQUFFLENBQUMsWUFBWSxDQUFDLFFBQVEsQ0FBQyxJQUFJLEVBQUUsT0FBTyxDQUFDLENBQUM7SUFDM0QsUUFBUSxDQUFDLFFBQVEsR0FBRyxFQUFFLENBQUM7SUFDdkIsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLFFBQVEsQ0FBQyxPQUFPLENBQUMsTUFBTSxHQUFHLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRTtRQUNwRCxRQUFRLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQztLQUN2RDtJQUNELFFBQVEsQ0FBQyxXQUFXLEdBQUcsS0FBSyxDQUFDLElBQUksQ0FBQyxJQUFJLEdBQUcsQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQztJQUM5RCxTQUFTLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0NBQzFCO0FBRUQsS0FBSyxHQUFHLElBQUksU0FBUyxFQUFFO0lBQ3JCLElBQUksY0FBYyxHQUFHLEVBQUUsQ0FBQztJQUN4QixLQUFLLE9BQU8sSUFBSSxHQUFHLENBQUMsV0FBVyxFQUFFO1FBQy9CLGNBQWMsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDO0tBQzNDO0lBQ0QsR0FBRyxDQUFDLGNBQWMsR0FBRyxjQUFjLENBQUM7Q0FDckM7QUFFRCx5RUFBeUU7QUFFekUsS0FBSyxHQUFHLElBQUksU0FBUyxFQUFFO0lBQ3JCLE9BQU8sQ0FBQyxHQUFHLENBQ1QsVUFBVSxHQUFHLENBQUMsSUFBSSwyQkFDaEIsR0FBRyxDQUFDLFFBQVEsQ0FBQyxNQUNmLCtCQUNFLEdBQUcsQ0FBQyxXQUFXLENBQUMsTUFDbEIsa0NBQWtDLEdBQUcsQ0FBQyxjQUFjLENBQUMsTUFBTSxFQUFFLENBQzlELENBQUM7Q0FDSDtBQUVELE9BQU8sQ0FBQyxPQUFPLENBQUMsMEJBQTBCLENBQUMsQ0FBQyJ9